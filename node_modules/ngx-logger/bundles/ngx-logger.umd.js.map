{"version":3,"file":"ngx-logger.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-logger/lib/http.service.ts","ng://ngx-logger/lib/types/logger-level.enum.ts","ng://ngx-logger/lib/logger.config.ts","ng://ngx-logger/lib/config.engine.ts","ng://ngx-logger/lib/utils/logger.utils.ts","ng://ngx-logger/lib/types/log-position.ts","ng://ngx-logger/lib/mapper.service.ts","ng://ngx-logger/lib/logger.service.ts","ng://ngx-logger/lib/custom-logger.service.ts","ng://ngx-logger/lib/logger.module.ts","ng://ngx-logger/lib/logger-monitor.ts","ng://ngx-logger/lib/types/ngx-log.interface.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpBackend, HttpRequest, HttpResponse} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport { NGXLogInterface } from './types/ngx-log.interface';\n\n\n\n@Injectable()\nexport class NGXLoggerHttpService {\n  constructor(private readonly httpBackend: HttpBackend) { }\n\n  logOnServer(url: string, log: NGXLogInterface, options: object): Observable<any> {\n    // HttpBackend skips all HttpInterceptors\n    // They may log errors using this service causing circular calls\n    const req = new HttpRequest<any>('POST', url, log, options || {});\n    return this.httpBackend.handle(req).pipe(\n      filter(e => e instanceof HttpResponse),\n      map<HttpResponse<any>, any>((httpResponse: HttpResponse<any>) => httpResponse.body)\n    );\n  }\n\n}\n","export enum NgxLoggerLevel {\n  TRACE = 0,\n  DEBUG,\n  INFO,\n  LOG,\n  WARN,\n  ERROR,\n  FATAL,\n  OFF\n}\n","import {NgxLoggerLevel} from './types/logger-level.enum';\n\nexport class LoggerConfig {\n  level: NgxLoggerLevel;\n  serverLogLevel?: NgxLoggerLevel;\n  serverLoggingUrl?: string;\n  disableConsoleLogging?: boolean;\n  httpResponseType?: 'arraybuffer' | 'blob' | 'text' | 'json';\n  enableSourceMaps?: boolean;\n}\n","import {LoggerConfig} from './logger.config';\n\nexport class NGXLoggerConfigEngine {\n\n  private _config;\n  constructor(readonly config: LoggerConfig) {\n    this._config = config;\n  }\n\n  updateConfig(config: LoggerConfig) {\n    this._config = this._clone(config);\n  }\n\n  getConfig() {\n    return this._clone(this._config);\n  }\n\n\n  // TODO: add tests around cloning the config. updating an object passed into the config (or retrieving from the config)\n  // should not update the active config, this is a shallow clone. If our config ever becomes hierarchical we must make\n  // this a deep clone\n  private _clone(object: any) {\n    const cloneConfig: LoggerConfig = new LoggerConfig();\n\n    Object.keys(object).forEach((key) => {\n      cloneConfig[key] = object[key];\n    });\n\n    return cloneConfig;\n  }\n}\n","import {NgxLoggerLevel} from '../types/logger-level.enum';\n\nexport class NGXLoggerUtils {\n\n  static prepareMetaString(timestamp: string, logLevel: string, fileName: string, lineNumber: string) {\n    const fileDetails = fileName ? ` [${fileName}:${lineNumber}]` : '';\n\n    return `${timestamp} ${logLevel}${fileDetails}`;\n  }\n\n  static getColor(level: NgxLoggerLevel): 'blue' | 'teal' | 'gray' | 'red' | undefined {\n    switch (level) {\n      case NgxLoggerLevel.TRACE:\n        return 'blue';\n      case NgxLoggerLevel.DEBUG:\n        return 'teal';\n      case NgxLoggerLevel.INFO:\n      case NgxLoggerLevel.LOG:\n        return 'gray';\n      case NgxLoggerLevel.WARN:\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        return 'red';\n      case NgxLoggerLevel.OFF:\n      default:\n        return;\n    }\n  }\n\n\n  /**\n   *  This allows us to see who called the logger\n   */\n  static getCallerDetails(): { lineNumber: string, fileName: string } {\n    const err = (new Error(''));\n\n    try {\n      // this should produce the line which NGX Logger was called\n      const callerLine = err.stack.split('\\n')[4].split('/');\n\n      // returns the file:lineNumber\n      const fileLineNumber = callerLine[callerLine.length - 1].replace(/[)]/g, '').split(':');\n\n      return {\n        fileName: fileLineNumber[0],\n        lineNumber: fileLineNumber[1]\n      };\n    } catch (e) {\n      return {\n        fileName: null,\n        lineNumber: null\n      };\n    }\n\n  }\n\n  static prepareMessage(message) {\n    try {\n      if (typeof message !== 'string' && !(message instanceof Error)) {\n        message = JSON.stringify(message, null, 2);\n      }\n    } catch (e) {\n      // additional = [message, ...additional];\n      message = 'The provided \"message\" value could not be parsed with JSON.stringify().';\n    }\n\n    return message;\n  }\n\n  static prepareAdditionalParameters(additional: any[]) {\n    if (additional === null || additional === undefined) {\n      return null;\n    }\n\n    return additional.map((next, idx) => {\n      try {\n        // We just want to make sure the JSON can be parsed, we do not want to actually change the type\n        if (typeof next === 'object') {\n          JSON.stringify(next);\n        }\n\n        return next;\n      } catch (e) {\n        return `The additional[${idx}] value could not be parsed using JSON.stringify().`;\n      }\n    });\n  }\n\n}\n","export class LogPosition {\n  constructor(\n    public fileName: string,\n    public lineNumber: number,\n    public columnNumber: number\n  ) {}\n  toString() {\n    return this.fileName + ':' + this.lineNumber + ':' + this.columnNumber;\n  }\n}\n","import {SourceMap} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\nimport {HttpBackend, HttpRequest, HttpResponse} from '@angular/common/http';\nimport * as vlq from 'vlq';\nimport {Observable, of} from 'rxjs';\nimport {catchError, filter, map, retry, switchMap} from 'rxjs/operators';\nimport {LogPosition} from './types/log-position';\n\n@Injectable()\nexport class NGXMapperService {\n\n  // used to cache source maps\n  private cache: { [key: string]: SourceMap } = {};\n  private errorCache: { [key: string]: boolean } = {};\n\n  constructor(private httpBackend: HttpBackend) {\n  }\n\n  /*\n  Static Functions\n */\n  private static getStackLine(): string {\n    const error = new Error();\n\n    try {\n      // noinspection ExceptionCaughtLocallyJS\n      throw error;\n    } catch (e) {\n\n      try {\n        return error.stack.split('\\n')[5];\n      } catch (e) {\n        return null;\n      }\n    }\n  }\n\n  private static getPosition(stackLine: string): LogPosition {\n    // strip base path, then parse filename, line, and column\n    const position = stackLine.substring(stackLine.lastIndexOf('\\/') + 1, stackLine.indexOf(')'));\n    const dataArray = position.split(':');\n    if (dataArray.length === 3) {\n      return new LogPosition(dataArray[0], +dataArray[1], +dataArray[2]);\n    }\n    return new LogPosition('unknown', 0, 0);\n  }\n\n  private static getTranspileLocation(stackLine: string): string {\n    return stackLine.substring(stackLine.indexOf('(') + 1, stackLine.indexOf(')'));\n  }\n\n  private static getMapFilePath(stackLine: string): string {\n    const file = NGXMapperService.getTranspileLocation(stackLine);\n    const mapFullPath = file.substring(0, file.lastIndexOf(':'));\n    return mapFullPath.substring(0, mapFullPath.lastIndexOf(':')) + '.map';\n  }\n\n  private static getMapping(sourceMap: SourceMap, position: LogPosition): LogPosition {\n    // => ';' indicates end of a line\n    // => ',' separates mappings in a line\n    // decoded mapping => [ generatedCodeColumn, sourceFileIndex, sourceCodeLine, sourceCodeColumn, nameIndex ]\n    let sourceFileIndex = 0,   // second field\n      sourceCodeLine = 0,    // third field\n      sourceCodeColumn = 0;  // fourth field\n\n    const lines = sourceMap.mappings.split(';');\n\n    for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n      // reset column position to 0 after each line\n      let generatedCodeColumn = 0;\n      // decode sections in line\n      const columns = lines[lineIndex].split(',');\n\n      for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\n        const decodedSection = vlq.decode(columns[columnIndex]);\n        if (decodedSection.length >= 4) {\n          // update relative positions\n          generatedCodeColumn += decodedSection[0];\n          sourceFileIndex += decodedSection[1];\n          sourceCodeLine += decodedSection[2];\n          sourceCodeColumn += decodedSection[3];\n        }\n\n        // check if matching map\n        if (lineIndex === position.lineNumber) {\n          if (generatedCodeColumn === position.columnNumber) {\n            // matching column and line found\n            return new LogPosition(sourceMap.sources[sourceFileIndex], sourceCodeLine, sourceCodeColumn);\n          } else if (columnIndex + 1 === columns.length) {\n            // matching column not found, but line is correct\n            return new LogPosition(sourceMap.sources[sourceFileIndex], sourceCodeLine, 0);\n          }\n        }\n      }\n    }\n    // failed if reached\n    return new LogPosition('unknown', 0, 0);\n  }\n\n  /**\n   * does the http get request to get the source map\n   * @param sourceMapLocation\n   * @param distPosition\n   */\n  private _getSourceMap(sourceMapLocation: string, distPosition: LogPosition): Observable<LogPosition> {\n    const req = new HttpRequest<SourceMap>('GET', sourceMapLocation);\n\n    return this.httpBackend.handle(req).pipe(\n      filter(e => (e instanceof HttpResponse)),\n      map<HttpResponse<SourceMap>, SourceMap>((httpResponse: HttpResponse<SourceMap>) => httpResponse.body),\n      map<SourceMap, LogPosition>(sourceMap => {\n        // store file in cache if not already stored\n        if (!this.cache.hasOwnProperty(sourceMapLocation)) {\n          this.cache[sourceMapLocation] = sourceMap;\n        }\n        // map generated position to source position\n        return NGXMapperService.getMapping(sourceMap, distPosition);\n      }),\n      retry(3),\n      // if there is an error getting the source, map fall back to the filename and line number of\n      catchError(() => {\n        this.errorCache[sourceMapLocation] = true;\n        return of(distPosition);\n      })\n    );\n  }\n\n  /**\n   * Returns the LogPosition for the current log\n   * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the file name\n   * and number of the call\n   * @param sourceMapsEnabled\n   */\n  public getCallerDetails(sourceMapsEnabled: boolean): Observable<LogPosition> {\n    // parse generated file mapping from stack trace\n\n    const stackLine = NGXMapperService.getStackLine();\n\n    // if we were not able to parse the stackLine, just return an empty Log Position\n    if (!stackLine) {\n      return of(new LogPosition('', 0, 0));\n    }\n\n    return of([\n      NGXMapperService.getPosition(stackLine),\n      NGXMapperService.getMapFilePath(stackLine)\n    ]).pipe(\n      switchMap<[LogPosition, string], Observable<LogPosition>>(([distPosition, sourceMapLocation]) => {\n\n        // if source maps are not enabled, or if we've previously tried to get the source maps, but they failed,\n        // then just use the position of the JS instead of the source\n        if (!sourceMapsEnabled || this.errorCache.hasOwnProperty(sourceMapLocation)) {\n          return of(distPosition);\n        }\n\n\n        // check if we have map has already, otherwise request from server\n        if (this.cache.hasOwnProperty(sourceMapLocation)) {\n          return of(NGXMapperService.getMapping(this.cache[sourceMapLocation], distPosition));\n        }\n\n        // finally try to get the source map and return the position\n        return this._getSourceMap(sourceMapLocation, distPosition);\n      })\n    );\n\n\n  }\n}\n\n\n\n\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { NGXLoggerHttpService } from './http.service';\nimport {LogPosition} from './types/log-position';\nimport { NgxLoggerLevel } from './types/logger-level.enum';\nimport { LoggerConfig } from './logger.config';\nimport { NGXLoggerConfigEngine } from './config.engine';\nimport { NGXLoggerUtils } from './utils/logger.utils';\nimport { NGXLoggerMonitor } from './logger-monitor';\nimport { NGXLogInterface } from './types/ngx-log.interface';\nimport { NGXMapperService } from './mapper.service';\n\nexport const Levels = [\n  'TRACE',\n  'DEBUG',\n  'INFO',\n  'LOG',\n  'WARN',\n  'ERROR',\n  'FATAL',\n  'OFF'\n];\n\n\n@Injectable()\nexport class NGXLogger {\n  private readonly _isIE: boolean;\n  private readonly _logFunc: Function;\n  private config: NGXLoggerConfigEngine;\n  private _customHttpHeaders: HttpHeaders;\n  private _customParams: HttpParams;\n  private _withCredentials: boolean = false;\n\n  private _loggerMonitor: NGXLoggerMonitor;\n\n  constructor(private readonly mapperService: NGXMapperService, private readonly httpService: NGXLoggerHttpService,\n              loggerConfig: LoggerConfig) {\n    this._isIE = navigator && navigator.userAgent &&\n      !!(navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident\\//) || navigator.userAgent.match(/Edge\\//));\n\n    // each instance of the logger should have their own config engine\n    this.config = new NGXLoggerConfigEngine(loggerConfig);\n\n    this._logFunc = this._isIE ? this._logIE.bind(this) : this._logModern.bind(this);\n\n  }\n\n  public trace(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.TRACE, message, additional);\n  }\n\n  public debug(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.DEBUG, message, additional);\n  }\n\n  public info(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.INFO, message, additional);\n  }\n\n  public log(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.LOG, message, additional);\n  }\n\n  public warn(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.WARN, message, additional);\n  }\n\n  public error(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.ERROR, message, additional);\n  }\n\n  public fatal(message, ...additional: any[]): void {\n    this._log(NgxLoggerLevel.FATAL, message, additional);\n  }\n\n  public setCustomHttpHeaders(headers: HttpHeaders) {\n    this._customHttpHeaders = headers;\n  }\n\n  public setCustomParams(params: HttpParams) {\n    this._customParams = params;\n  }\n\n  public setWithCredentialsOptionValue(withCredentials: boolean) {\n    this._withCredentials = withCredentials;\n  }\n\n  public registerMonitor(monitor: NGXLoggerMonitor) {\n    this._loggerMonitor = monitor;\n  }\n\n  public updateConfig(config: LoggerConfig) {\n    this.config.updateConfig(config);\n  }\n\n  public getConfigSnapshot(): LoggerConfig {\n    return this.config.getConfig();\n  }\n\n  private _logIE(level: NgxLoggerLevel, metaString: string, message: string, additional: any[]): void {\n\n    // Coloring doesn't work in IE\n    // make sure additional isn't null or undefined so that ...additional doesn't error\n    additional = additional || [];\n\n    switch (level) {\n      case NgxLoggerLevel.WARN:\n        console.warn(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        console.error(`${metaString} `, message, ...additional);\n        break;\n      case NgxLoggerLevel.INFO:\n        console.info(`${metaString} `, message, ...additional);\n        break;\n      default:\n        console.log(`${metaString} `, message, ...additional);\n    }\n  }\n\n  private _logModern(level: NgxLoggerLevel, metaString: string, message: string, additional: any[]): void {\n\n    const color = NGXLoggerUtils.getColor(level);\n\n    // make sure additional isn't null or undefined so that ...additional doesn't error\n    additional = additional || [];\n\n    switch (level) {\n      case NgxLoggerLevel.WARN:\n        console.warn(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      case NgxLoggerLevel.ERROR:\n      case NgxLoggerLevel.FATAL:\n        console.error(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      case NgxLoggerLevel.INFO:\n        console.info(`%c${metaString}`, `color:${color}`, message, ...additional);\n        break;\n      //  Disabling console.trace since the stack trace is not helpful. it is showing the stack trace of\n      // the console.trace statement\n      // case NgxLoggerLevel.TRACE:\n      //   console.trace(`%c${metaString}`, `color:${color}`, message, ...additional);\n      //   break;\n\n      //  Disabling console.debug, because Has this hidden by default.\n      // case NgxLoggerLevel.DEBUG:\n      //   console.debug(`%c${metaString}`, `color:${color}`, message, ...additional);\n      //   break;\n      default:\n        console.log(`%c${metaString}`, `color:${color}`, message, ...additional);\n    }\n  }\n\n  private _log(level: NgxLoggerLevel, message, additional: any[] = [], logOnServer: boolean = true): void {\n    const config = this.config.getConfig();\n    const isLog2Server = logOnServer && config.serverLoggingUrl && level >= config.serverLogLevel;\n    const isLogLevelEnabled = level >= config.level;\n\n    if (!(message && (isLog2Server || isLogLevelEnabled))) {\n      return;\n    }\n\n    const logLevelString = Levels[level];\n\n    message = NGXLoggerUtils.prepareMessage(message);\n\n    // only use validated parameters for HTTP requests\n    const validatedAdditionalParameters = NGXLoggerUtils.prepareAdditionalParameters(additional);\n\n    const timestamp = new Date().toISOString();\n\n    // const callerDetails = NGXLoggerUtils.getCallerDetails();\n    this.mapperService.getCallerDetails(config.enableSourceMaps).subscribe((callerDetails: LogPosition) => {\n      const logObject: NGXLogInterface = {\n        message: message,\n        additional: validatedAdditionalParameters,\n        level: level,\n        timestamp: timestamp,\n        fileName: callerDetails.fileName,\n        lineNumber: callerDetails.lineNumber.toString()\n      };\n\n      if (this._loggerMonitor && isLogLevelEnabled) {\n        this._loggerMonitor.onLog(logObject);\n      }\n\n      if (isLog2Server) {\n        // make sure the stack gets sent to the server\n        message = message instanceof Error ? message.stack : message;\n        logObject.message = message;\n\n        const headers = this._customHttpHeaders || new HttpHeaders();\n        headers.set('Content-Type', 'application/json');\n\n        const options = {\n          headers: headers,\n          params: this._customParams || new HttpParams(),\n          responseType: config.httpResponseType || 'json',\n          withCredentials: this._withCredentials\n        };\n        // Allow logging on server even if client log level is off\n        this.httpService.logOnServer(config.serverLoggingUrl, logObject, options).subscribe((res: any) => {\n            // I don't think we should do anything on success\n          },\n          (error: HttpErrorResponse) => {\n            this._log(NgxLoggerLevel.ERROR, `FAILED TO LOG ON SERVER: ${message}`, [error], false);\n          }\n        );\n      }\n\n\n      // if no message or the log level is less than the environ\n      if (isLogLevelEnabled && !config.disableConsoleLogging) {\n        const metaString = NGXLoggerUtils.prepareMetaString(timestamp, logLevelString,\n          callerDetails.fileName, callerDetails.lineNumber.toString());\n\n        return this._logFunc(level, metaString, message, additional);\n      }\n    });\n  }\n}\n","import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\n\nimport {LoggerConfig} from './logger.config';\nimport {NGXLoggerHttpService} from './http.service';\nimport {NGXLogger} from './logger.service';\nimport {NGXLoggerMonitor} from './logger-monitor';\nimport {NGXMapperService} from './mapper.service';\n\n\n/**\n * CustomNGXLoggerService is designed to allow users to get a new instance of a logger\n */\n@Injectable()\nexport class CustomNGXLoggerService {\n\n  constructor(private readonly mapperService: NGXMapperService,\n              private readonly httpService: NGXLoggerHttpService) {\n  }\n\n  create(config: LoggerConfig, httpService?: NGXLoggerHttpService, logMonitor?: NGXLoggerMonitor,\n         mapperService?: NGXMapperService): NGXLogger {\n    // you can inject your own httpService or use the default,\n    const logger = new NGXLogger(mapperService || this.mapperService,\n      httpService || this.httpService, config);\n\n    if (logMonitor) {\n      logger.registerMonitor(logMonitor);\n    }\n\n    return logger;\n  }\n}\n\n\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NGXLogger} from './logger.service';\nimport {LoggerConfig} from './logger.config';\nimport {CustomNGXLoggerService} from './custom-logger.service';\nimport {NGXLoggerHttpService} from './http.service';\nimport {NGXMapperService} from './mapper.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    NGXLogger,\n    NGXLoggerHttpService,\n    CustomNGXLoggerService,\n    NGXMapperService\n  ]\n})\nexport class LoggerModule {\n  static forRoot(config: LoggerConfig | null | undefined): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        {provide: LoggerConfig, useValue: config || {}},\n        NGXLogger,\n        NGXLoggerHttpService,\n        CustomNGXLoggerService,\n        NGXMapperService\n      ]\n    };\n  }\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        NGXLogger,\n        NGXLoggerHttpService,\n        CustomNGXLoggerService,\n        NGXMapperService\n      ]\n    };\n  }\n}\n","import {NGXLogInterface} from './types/ngx-log.interface';\n\nexport abstract class NGXLoggerMonitor {\n  abstract onLog(logObject: NGXLogInterface): void;\n}\n","import {NgxLoggerLevel} from './logger-level.enum';\n\nexport class NGXLogInterface {\n  level: NgxLoggerLevel;\n  timestamp: string;\n  fileName: string;\n  lineNumber: string;\n  message: string;\n  additional: any[];\n}\n"],"names":["HttpRequest","filter","HttpResponse","map","Injectable","HttpBackend","vlq.decode","retry","catchError","of","switchMap","HttpHeaders","HttpParams","NgModule","CommonModule"],"mappings":"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"}